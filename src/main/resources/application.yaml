####################################################################
#
# Profiles: All
#
####################################################################
springdoc:
  swagger-ui:
    path: /

management:
  endpoints:
    web:
      exposure:
        include: "*"
springdoc.packages-to-scan: no.nav.bidrag.vedtak.controller
management.metrics.distribution.percentiles-histogram.http.server.requests: true
management.metrics.distribution.percentiles-histogram.http.client.requests: true
---

####################################################################
# Profile: live
#----------------------------
#
# Live token-support properties.
#
####################################################################
# OIDC

spring:
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS}
    properties:
      security.protocol: SSL
      ssl:
        keystore:
          type: PKCS12
          location: ${KAFKA_KEYSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
        truststore:
          location: ${KAFKA_TRUSTSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
        endpoint.identification.algorithm:
        producer:
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: org.apache.kafka.common.serialization.StringSerializer

  config.activate.on-profile: "live"
no.nav.security.jwt:
  client:
    registration:
      bidrag-organisasjon:
        resource-url: ${BIDRAG_ORGANISASJON_URL}
        token-endpoint-url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: api://${BIDRAG_ORGANISASJON_SCOPE}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_post
      bidrag-person:
        resource-url: ${PERSON_URL}
        token-endpoint-url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: api://${PERSON_SCOPE}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_post
  issuer:
    aad:
      discoveryurl: ${AZURE_APP_WELL_KNOWN_URL}
      accepted_audience: ${AZURE_APP_CLIENT_ID}, api://${AZURE_APP_CLIENT_ID}

---
spring:
  config.activate.on-profile: database-legacy
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}?user=${DB_USERNAME}&password=${DB_PASSWORD}
    hikari:
      idle-timeout: 10001
      max-lifetime: 30001
      connectionTimeout: 1000
      maximum-pool-size: 10
      minimum-idle: 1
  flyway:
    enabled: true
    locations: classpath:/db/migration
  jpa:
    hibernate.connection.provider_class: org.hibernate.hikaricp.internal.HikariCPConnectionProvider
    database: postgresql
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect

---
spring:
  config.activate.on-profile: database-new
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: ${DB_JDBC_URL}
    hikari:
      idle-timeout: 10001
      max-lifetime: 30001
      connectionTimeout: 1000
      maximum-pool-size: 10
      minimum-idle: 1
      data-source-properties:
        ssl: true
        sslmode: ${DB_SSLMODE}
        sslcert: ${DB_SSLCERT}
        sslkey: ${DB_SSLKEY_PK8}
        sslrootcert: ${DB_SSLROOTCERT}
  flyway:
    enabled: true
    locations: classpath:/db/migration
  jpa:
    hibernate.connection.provider_class: org.hibernate.hikaricp.internal.HikariCPConnectionProvider
    database: postgresql
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect